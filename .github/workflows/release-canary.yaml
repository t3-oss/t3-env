name: Release - Canary

on:
  pull_request:
    types: [labeled]
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  release:
    if: contains(github.event.pull_request.labels.*.name, 'release canary')
    name: Build & Publish a canary release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use PNPM
        uses: pnpm/action-setup@v2.2.4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Check packages for common errors
        run: pnpm turbo --filter "./packages/*" build lint test typecheck

      - name: Bump version to canary
        run: node .github/canary-version.js

      - name: Authenticate to npm and publish
        run: |
          pnpm build
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          pnpm publish packages/core --access public --tag canary --no-git-checks
          pnpm publish packages/nextjs --access public --tag canary --no-git-checks

      - name: Create a new comment notifying of the new canary version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get package version
            const fs = require("fs");
            const packageJson = JSON.parse(fs.readFileSync("./packages/core/package.json"));
            const version = packageJson.version;

            // Create a comment on the PR with the new canary version
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `A new canary is available for testing. You can install this latest build in your project with:

              \`\`\`sh
              pnpm add @t3-oss/env-core@${version}
              \`\`\`

              or, if you're using Next.js:

              \`\`\`sh
              pnpm add @t3-oss/env-nextjs@${version}
              \`\`\`
              `,
            })

            // Remove the label
            github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              name: 'release canary',
            });
